using System;
using System.Linq;
using System.Collections.Generic;

					
public class Program
{
	public class Product 
	{
		public int Id {get;set;}
		public string Name {get;set;}
	}
	
	public class AddProduct
	{
	    public int Id {get; set;}
		public int Quantity {get;set;}
		public int Price {get;set;}
		public string Size {get;set;}
		public int ProductId {get;set;}
     }
	
	public class QuantityTable
	{
		public int totalQuantity {get; set;}
		public int totalPrice {get; set;}
		public string Sizes {get;set;}
		public int ProdctID {get; set;}
	
	}
	
	
	public static void Main()
	{
		List<Product> headProd = new List<Product>(){
		  new Product(){Id=1, Name="Pepsi"},
		  new Product(){Id=2, Name="Coke"}
		
		};
		
		
		List<AddProduct> listProduct = new List<AddProduct>()
		{
		    new AddProduct(){Id = 1, Quantity=10, Price= 3, Size ="M", ProductId = 1},
			new AddProduct(){Id = 2, Quantity=5, Price= 3, Size ="L", ProductId = 1},
			new AddProduct(){Id = 3, Quantity=20, Price= 3, Size ="M", ProductId = 2},
			new AddProduct(){Id = 4, Quantity=25, Price= 3, Size ="L", ProductId = 2},
			new AddProduct(){Id = 5, Quantity=15, Price= 3, Size ="M", ProductId = 1}
		
		};
		
	var listQuantityObj = listProduct.GroupBy(x =>  new{ x.ProductId, x.Size}).Select(x => new QuantityTable(){
	                     totalQuantity = x.Sum(s => s.Quantity),
		                   totalPrice = x.Sum(s => s.Price),
		                    Sizes = x.Key.Size
		                   
		                     
	                  });
		
	var groupJoinObj = headProd.GroupJoin(listProduct,
							f => f.Id,
							s => s.ProductId,
						  (Name, Products) => new {
						   Name = Name.Name,
						   totalQuantity = Products.Sum(s => s.Quantity),
		                   totalPrice = Products.Sum(s => s.Price),
		                  
							}); 	
 var groupJoinTwo = headProd.GroupJoin(listProduct,
							f => f.Id,
							s => s.ProductId,
						  (Name, Products) => new {
						   Name = Name.Name,
						   objs = Products.GroupBy(x => x.Size).Select(y => new QuantityTable(){
						      Sizes = y.Key,
							  totalQuantity = y.Sum(x => x.Quantity),
							  totalPrice = y.Sum(z => z.Price)
						   })
		                  
							}); 	
		
		
		foreach(QuantityTable product in listQuantityObj)
		{
		  Console.WriteLine("Q :"+product.totalQuantity+" Tot Price "+ product.totalPrice +" Sizes:"+ product.Sizes);
			
		}
		
		 foreach(var products in groupJoinObj)
		{
		  Console.WriteLine("NAME :"+products.Name+" TotAL Price "+ products.totalPrice +" q :"+ products.totalQuantity);
			
		}
		
		 foreach(var products in groupJoinTwo)
		{
			 foreach(var obj in products.objs)
			 {
		  Console.WriteLine("NAME :"+products.Name+" Size "+ obj.Sizes +" Price :"+ obj.totalPrice+" Tot-Quantity:"+ obj.totalQuantity);
			 }
		}
		
	}}

--------------------------------------------------------------------------------------------------------
using System;
using System.Linq;
using System.Collections.Generic;

public class Program
{
	public class Category
	{
		public int Id {get;set;}
		public string CatergoryName {get;set;}
	    
	}
	public class Product
	{
		public int Id {get;set;}
		public string ProductName {get;set;}
		public int CatergoryID {get;set;}
	    
	}
	public class Stock
	{
		public int Id {get;set;}
		public int Cost {get;set;}
		public int ProductID {get;set;}
	    
	}
	
	
	public static void Main(string[] args)
	{
		List <Category> listCategory = new List<Category>(){
		   new Category() {Id = 1, CatergoryName = "Motors"},
			new Category() {Id = 2, CatergoryName = "Lights"}
		};
		
		List<Product> listProduct = new List<Product>(){
		   new Product() {Id = 1, ProductName="BoreWell" , CatergoryID = 1},
			new Product() {Id = 2, ProductName="LED" , CatergoryID = 2}
		};
		
		List<Stock> listStock = new List<Stock>(){
		   new Stock() {Id= 1, Cost = 8500, ProductID = 1},
			new Stock() {Id= 2, Cost = 2500, ProductID = 2}
		};

     var productwithCategory = listCategory.Join(listProduct, 
			c => c.Id,
            p => p.CatergoryID,
		   (category, product) => new
		   {
			 ID = category.Id,  
		     Name = category.CatergoryName,
		     ProductName = product.ProductName
		   });
		
		foreach(var obj in productwithCategory)
		{
		  Console.WriteLine("ID :"+obj.ID+" Category: "+obj.Name+" ProdName: "+obj.ProductName);
		}
		
	var completeObj = productwithCategory.Join(listStock, 
								f => f.ID,
								s => s.ProductID,
								(first, second) => new {
									pWc = first,
									price = second.Cost
									
								});
		
		
		foreach(var obj in completeObj)
		{
		  Console.WriteLine("ID :"+obj.pWc.ID+" Category: "+obj.pWc.Name+" ProdName: "+obj.pWc.ProductName+" Cost : "+obj.price);
		}
		
		
		
		
	}
}
-------------------------------------------------------------------------------------------------------------------------------------------------------------
